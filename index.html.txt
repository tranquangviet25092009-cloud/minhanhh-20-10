<!doctype html>
<html lang="vi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Happy 20/10 ‚Äî Minh Anh</title>
  <style>
    /* Reset */
    *{box-sizing:border-box;margin:0;padding:0}
    html,body{height:100%}
    body{
      background:#000; /* n·ªÅn ƒëen */
      color:#fff;
      font-family:ui-sans-serif,system-ui,Segoe UI,Roboto,'Helvetica Neue',Arial;
      overflow:hidden;
      display:flex;align-items:center;justify-content:center;
    }

    /* Canvas tr√°i tim */
    #heartCanvas{position:fixed;left:0;top:0;width:100%;height:100%;z-index:0}

    /* Trung t√¢m n·ªôi dung */
    .stage{
      position:relative;z-index:5;display:flex;align-items:center;justify-content:center;flex-direction:column;
      width:min(900px,92vw);height:min(900px,92vw);
    }

    /* V√≤ng tr√≤n ch·ª©a ch·ªØ ch·∫°y */
    .circle-wrap{position:relative;width:420px;height:420px;border-radius:50%;display:flex;align-items:center;justify-content:center}
    .circle{width:360px;height:360px;border-radius:50%;position:relative;display:flex;align-items:center;justify-content:center}

    /* ch·ªØ ch·∫°y quanh v√≤ng */
    .orbit-text{
      position:absolute;left:50%;top:50%;width:360px;height:360px;margin-left:-180px;margin-top:-180px;border-radius:50%;
      pointer-events:none;filter:drop-shadow(0 6px 12px rgba(255,0,128,0.15));
    }
    .orbit-text .char{position:absolute;left:50%;top:50%;transform-origin:0  -160px; font-weight:700; color:#ff9fcf; text-shadow:0 2px 10px rgba(0,0,0,0.6)}

    /* Logo Hello Kitty (placeholder frame) */
    .center-logo{
      width:160px;height:160px;border-radius:50%;background:linear-gradient(180deg,#ffd6e8,#ff9fcf);display:flex;align-items:center;justify-content:center;flex-direction:column;box-shadow:0 10px 30px rgba(255,100,180,0.18);
      border:6px solid rgba(255,255,255,0.06);
    }
    .center-logo img{width:128px;height:128px;object-fit:contain}

    /* L·ªùi ch√∫c list */
    .messages{
      margin-top:20px;width:100%;max-width:640px;background:linear-gradient(180deg,rgba(255,255,255,0.02),rgba(255,255,255,0.00));padding:16px;border-radius:12px;backdrop-filter:blur(4px);
      box-shadow:0 6px 18px rgba(0,0,0,0.6);
    }
    .messages h2{font-size:20px;color:#ffdaef;margin-bottom:10px;text-align:center}
    .messages ol{list-style:none;display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:10px}
    .messages li{padding:8px;border-radius:8px;background:rgba(255,255,255,0.02);font-size:14px}

    /* nh·∫π nh√†ng sparkle */
    .sparkle{position:absolute;left:50%;top:50%;width:100%;height:100%;pointer-events:none;z-index:2}

    /* responsive */
    @media(max-width:520px){.circle-wrap{width:320px;height:320px}.center-logo{width:120px;height:120px}.orbit-text{width:280px;height:280px;margin-left:-140px;margin-top:-140px}.orbit-text .char{transform-origin:0 -120px}}

  </style>
</head>
<body>
  <canvas id="heartCanvas"></canvas>

  <div class="stage" role="main" aria-label="Thi·ªáp 20/10 cho Minh Anh">
    <div class="circle-wrap">
      <div class="orbit-text" id="orbitText" aria-hidden="true"></div>

      <div class="circle" aria-hidden="true">
        <div class="center-logo" title="Hello Kitty (thay b·∫±ng ·∫£nh Hello Kitty h·ªìng)">
          <!-- Thay ·∫£nh b·∫±ng file hello-kitty-pink.png trong c√πng th∆∞ m·ª•c -->
          <img src="hello-kitty-pink.png" alt="Hello Kitty" onerror="this.style.opacity=0.9;this.outerHTML='<svg width=120 height=120 viewBox=\"0 0 120 120\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=60 cy=60 r=58 fill=\"#ffd6e8\" /><g transform=\"translate(20,18) scale(0.8)\"><path d=\"M30 6c0-3 3-6 6-6s6 3 6 6c0 3-3 6-6 6s-6-3-6-6z\" fill=\"#fff\"/></g></svg>'">
        </div>
      </div>
    </div>

    <div class="messages" id="messagesBox">
      <h2>Ch√∫c m·ª´ng 20/10 ‚Äî Minh Anh üíñ</h2>
      <ol id="msgList">
        <!-- C√°c l·ªùi ch√∫c s·∫Ω fill b·∫±ng JS -->
      </ol>
    </div>
  </div>

  <div class="sparkle" id="sparkleLayer"></div>

  <script>
    // --- D·ªØ li·ªáu l·ªùi ch√∫c ---
    const messages = [
      "Ch√∫c Minh Anh lu√¥n r·∫°ng r·ª° nh∆∞ √°nh n·∫Øng ban mai, d·ªãu d√†ng m√† v·∫´n ƒë·∫ßy nƒÉng l∆∞·ª£ng.",
      "Ch√∫c c√¥ g√°i t√™n Minh Anh xinh ƒë·∫πp m·ªói ng√†y ƒë·ªÅu m·ªâm c∆∞·ªùi th·∫≠t t∆∞∆°i, v√¨ b·∫°n x·ª©ng ƒë√°ng v·ªõi m·ªçi ƒëi·ªÅu t·ªët ƒë·∫πp nh·∫•t!",
      "Ch√∫c Minh Anh c√≥ m·ªôt ng√†y 20/10 ng·∫≠p tr√†n hoa, qu√† v√† nh·ªØng l·ªùi y√™u th∆∞∆°ng ch√¢n th√†nh nh·∫•t.",
      "Kh√¥ng ch·ªâ h√¥m nay m√† c·∫£ 364 ng√†y c√≤n l·∫°i, mong Minh Anh lu√¥n ƒë∆∞·ª£c y√™u th∆∞∆°ng, tr√¢n tr·ªçng v√† h·∫°nh ph√∫c.",
      "Ch√∫c cho n·ª• c∆∞·ªùi c·ªßa Minh Anh s·∫Ω lu√¥n l√† ngu·ªìn nƒÉng l∆∞·ª£ng t√≠ch c·ª±c cho m·ªçi ng∆∞·ªùi xung quanh.",
      "Minh Anh ∆°i, h√£y c·ª© t·ª± tin, xinh ƒë·∫πp v√† t·ªèa s√°ng nh∆∞ ch√≠nh con ng∆∞·ªùi tuy·ªát v·ªùi c·ªßa b·∫°n nh√©!",
      "Ng√†y 20/10, mong m·ªçi ∆∞·ªõc m∆° c·ªßa Minh Anh ƒë·ªÅu tr·ªü th√†nh hi·ªán th·ª±c, theo c√°ch d·ªãu d√†ng nh·∫•t.",
      "Ch√∫c Minh Anh lu√¥n vui t∆∞∆°i, h·ªçc gi·ªèi, th√†nh c√¥ng trong m·ªçi ƒëi·ªÅu m√¨nh ch·ªçn ‚Äî v√† ƒë·ª´ng qu√™n c∆∞·ªùi m·ªói ng√†y nh√©!",
      "N·∫øu h·∫°nh ph√∫c l√† m·ªôt ƒëo√° hoa, ch√∫c Minh Anh c√≥ c·∫£ m·ªôt v∆∞·ªùn hoa n·ªü r·ªô quanh m√¨nh h√¥m nay!",
      "20/10 ch·ªâ c√≥ m·ªôt, nh∆∞ng Minh Anh th√¨ lu√¥n ƒë·∫∑c bi·ªát ‚Äî v√¨ b·∫°n mang ƒë·∫øn s·ª± ·∫•m √°p cho m·ªçi ng∆∞·ªùi quanh b·∫°n."
    ];

    // --- ƒêi·ªÅn danh s√°ch l·ªùi ch√∫c ---
    const msgList = document.getElementById('msgList');
    messages.forEach((m)=>{
      const li = document.createElement('li'); li.innerText = m; msgList.appendChild(li);
    });

    // --- T·∫°o ch·ªØ ch·∫°y quanh v√≤ng tr√≤n ---
    const orbit = document.getElementById('orbitText');
    const title = '   ‚òÖ  Happy 20/10 ‚Äî Minh Anh  ‚òÖ   ';
    const full = title.repeat(6); // l·∫∑p ƒë·ªÉ ƒë·ªß v√≤ng

    function buildOrbit(text){
      orbit.innerHTML='';
      const R = orbit.clientWidth/2;
      const chars = Array.from(text);
      const degStep = 360 / chars.length;
      chars.forEach((ch,i)=>{
        const span = document.createElement('span');
        span.className='char';
        span.style.transform = `rotate(${i*degStep}deg)`;
        span.style.left = '50%'; span.style.top='50%';
        span.textContent = ch;
        orbit.appendChild(span);
      });
    }
    buildOrbit(full);

    // rotate animation (gentle)
    let rot = 0;
    function animateOrbit(){
      rot += 0.06; // t·ªëc ƒë·ªô
      orbit.style.transform = `rotate(${rot}deg)`;
      requestAnimationFrame(animateOrbit);
    }
    animateOrbit();

    // --- Canvas tr√°i tim nh·∫π nh√†ng ---
    const canvas = document.getElementById('heartCanvas');
    const ctx = canvas.getContext('2d');
    function resize(){canvas.width=innerWidth;canvas.height=innerHeight}
    window.addEventListener('resize',resize); resize();

    const hearts = [];
    function rand(min,max){return Math.random()*(max-min)+min}
    function createHeart(){
      hearts.push({x:rand(0,canvas.width),y:canvas.height+20, vx:rand(-0.3,0.3), vy:rand(-1.2,-0.4), size:rand(8,26), alpha:rand(0.4,0.9)})
    }
    for(let i=0;i<18;i++) createHeart();

    function drawHeart(x,y,size,alpha){
      ctx.save(); ctx.translate(x,y); ctx.scale(size/20,size/20); ctx.globalAlpha=alpha;
      ctx.beginPath(); ctx.moveTo(0,-7);
      ctx.bezierCurveTo(-8,-28,-38,-18,-38,-2);
      ctx.bezierCurveTo(-38,16,-18,28,0,40);
      ctx.bezierCurveTo(18,28,38,16,38,-2);
      ctx.bezierCurveTo(38,-18,8,-28,0,-7);
      ctx.closePath(); ctx.fillStyle='#ff9fcf'; ctx.fill();
      ctx.restore();
    }

    function tick(){
      ctx.clearRect(0,0,canvas.width,canvas.height);
      if(Math.random()<0.06) createHeart();
      for(let i=hearts.length-1;i>=0;i--){
        const h = hearts[i]; h.x += h.vx; h.y += h.vy; h.alpha -= 0.002;
        drawHeart(h.x,h.y,h.size,h.alpha);
        if(h.y < -60 || h.alpha<=0) hearts.splice(i,1);
      }
      requestAnimationFrame(tick);
    }
    tick();

    // --- Sparkles around center (gentle) ---
    const sparkleLayer = document.getElementById('sparkleLayer');
    const splCtx = document.createElement('canvas');
    splCtx.width = innerWidth; splCtx.height = innerHeight; sparkleLayer.appendChild(splCtx);

    // fallback simple CSS sparkles using small DOM elements
    function makeSparkles(){
      for(let i=0;i<18;i++){
        const s = document.createElement('div');
        s.style.position='absolute'; s.style.width=s.style.height='6px'; s.style.borderRadius='50%';
        s.style.left = `${50+Math.cos(i)*18}%`; s.style.top = `${50+Math.sin(i)*18}%`;
        s.style.transform='translate(-50%,-50%)'; s.style.opacity=0.9; s.style.boxShadow='0 0 12px rgba(255,200,240,0.7)';
        sparkleLayer.appendChild(s);
        (function(el){
          let t=0; function a(){t+=0.02; el.style.transform = `translate(-50%,-50%) scale(${1+0.08*Math.sin(t*6)})`; requestAnimationFrame(a);} a();
        })(s);
      }
    }
    makeSparkles();

    // Accessibility: focus to messages
    document.addEventListener('keydown',e=>{ if(e.key==='m') document.getElementById('messagesBox').focus() })

    // Small: allow copying messages as text
    const box = document.getElementById('messagesBox');
    box.tabIndex = -1;

  </script>
</body>
</html>
